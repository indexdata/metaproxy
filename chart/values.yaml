# Default values for ..
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# IfNotPresent: only pull the image when it doesnâ€™t already exist on the node.
# Always: always pull the latest version of the image from the container registry.
# Never: there will be no attempts to pull the image.
image:
  repository: ghcr.io/indexdata/metaproxy
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

containerPort: 8080
# envvars passed to the container
env: {}

# envvars passed to the container as secretKeyRef, format
# VARIABLE:
#   name: secret-name
#   key: secret-key
envSecrets: {}

# envvars passed to the container as configMapKeyRef, format
# VARIABLE:
#   name: config-map-name
#   key: config-map-key
envConfigMaps: {}

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created.
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account.
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  httpPort: 80

serviceAnnotations: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Metaproxy image requires a config map volume
volumes:
  - name: metaproxy-config-volume
    configMap: metaproxy-config

# You can specify additional volumes on the output Deployment below:
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

volumeMounts:
  - name: metaproxy-config-volume
    mountPath: "/etc/metaproxy"
    readOnly: true

# You can specify additional volumeMounts on the output Deployment below:
# - name: foo-
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
